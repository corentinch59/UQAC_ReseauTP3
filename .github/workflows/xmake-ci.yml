name: XMake CI

on:
    release:
        types: [published]
#  push:
#    branches:
#      - main
#  pull_request:
#    branches:
#      - main

jobs:
    build:
        name: "[${{ matrix.mode }}] Build on ${{ matrix.os }}-latest"
        runs-on: ${{ matrix.os }}-latest
        strategy:
            matrix:
                os: [windows, macos, ubuntu]
                mode: [release, rel-editor, rel-server]

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Setup OpenGL for ubuntu
              if: matrix.os == 'ubuntu'
              run: sudo apt-get install mesa-utils

            - name: Install XMake
              uses: xmake-io/github-action-setup-xmake@v1
              with:
                  package-cache: true
                  package-cache-key: ${{matrix.os}}

            - name: Configure XMake
              run: xmake f -y -m ${{ matrix.mode }}

            - name: Build with XMake
              run: xmake

            - name: ADZDOIAJZD
              if: matrix.os != 'windows'
              run: ls -R build/

            - name: Create ZIP MacOS
              if: matrix.os == 'macos'
              uses: thedoctor0/zip-release@0.7.5
              with:
                  type: 'zip'
                  filename: '${{matrix.mode}}-${{matrix.os}}.zip'
                  path: build/macosx/arm64/${{matrix.mode}}
                  exclusions: '*.lib *.so *.a *.dll'

            - name: Create ZIP Linux
              if: matrix.os == 'ubuntu'
              uses: thedoctor0/zip-release@0.7.5
              with:
                  type: 'zip'
                  filename: '${{matrix.mode}}-${{matrix.os}}.zip'
                  path: build/linux/x64/${{matrix.mode}}
                  exclusions: '*.lib *.so *.a *.dll'

            - name: Create ZIP Windows
              if: matrix.os == 'windows'
              uses: thedoctor0/zip-release@0.7.5
              with:
                  type: 'zip'
                  filename: '${{matrix.mode}}-${{matrix.os}}.zip'
                  path: build/windows/x64/${{matrix.mode}}
                  exclusions: '*.lib *.so *.a *.dll'

            - name: Upload Release
              run: gh release upload ${{github.event.release.tag_name}} ${{matrix.mode}}-${{matrix.os}}.zip
              env:
                  GITHUB_TOKEN: ${{ github.TOKEN }}
